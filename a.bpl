// Generated by flintc


var totalValue_Wei: int;

var receivedValue_Wei: int;

var sentValue_Wei: int;

type Address = int;

procedure {:inline 10} send(address: Address, wei: int)
  // Pre Conditions
  
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# 7907092033235033446
ensures ((rawValue_Wei[wei] == 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies rawValue_Wei;
{
// Local variable declarations


// send's implementation

// #MARKER# 7907092033235033446
rawValue_Wei[wei] := 0;
// #MARKER# 7907092033235033446
}

function power(n: int, e: int) returns (result: int);

axiom (forall n: int :: (power(n, 0) == 1));

axiom (forall n: int, e: int :: (((e > 0) && ((e mod 2) == 0)) ==> (power(n, e) == (power(n, (e div 2)) * power(n, (e div 2))))));

axiom (forall n: int, e: int :: (((e > 0) && ((e mod 2) == 1)) ==> (power(n, e) == ((power(n, ((e - 1) div 2)) * power(n, ((e - 1) div 2))) * n))));

var nextInstance_Wei: int;

var rawValue_Wei: [int]int;

procedure {:inline 10} setRawValueInt_Wei(struct_instance_setRawValueInt_Wei_374zpOTpwX: int, value_setRawValueInt_Wei: int) returns ( result_variable_setRawValueInt_Wei_R51I7E7Ugk: int)
  // Pre Conditions
  
// #MARKER# -7372153764734721921
requires (((struct_instance_setRawValueInt_Wei_374zpOTpwX < nextInstance_Wei) && (struct_instance_setRawValueInt_Wei_374zpOTpwX >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -8752884151079139645
ensures ((rawValue_Wei[struct_instance_setRawValueInt_Wei_374zpOTpwX] == value_setRawValueInt_Wei));
// #MARKER# -3142997403165432450
ensures ((result_variable_setRawValueInt_Wei_R51I7E7Ugk == value_setRawValueInt_Wei));
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies rawValue_Wei;
{
// Local variable declarations


// setRawValueInt_Wei's implementation

// #MARKER# 5225486021969889222
rawValue_Wei[struct_instance_setRawValueInt_Wei_374zpOTpwX] := value_setRawValueInt_Wei;
// #MARKER# 7600784791442066872
result_variable_setRawValueInt_Wei_R51I7E7Ugk := rawValue_Wei[struct_instance_setRawValueInt_Wei_374zpOTpwX];
// #MARKER# -7372153764734721921
}

procedure {:inline 10} getRawValue_Wei(struct_instance_getRawValue_Wei_uIO8LpV0Y1: int) returns ( result_variable_getRawValue_Wei_HBDhRZUVd4: int)
  // Pre Conditions
  
// #MARKER# -7580936090723529065
requires (((struct_instance_getRawValue_Wei_uIO8LpV0Y1 < nextInstance_Wei) && (struct_instance_getRawValue_Wei_uIO8LpV0Y1 >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# 4907544466732252148
ensures ((result_variable_getRawValue_Wei_HBDhRZUVd4 == rawValue_Wei[struct_instance_getRawValue_Wei_uIO8LpV0Y1]));
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
{
// Local variable declarations


// getRawValue_Wei's implementation

// #MARKER# 3309158899395805802
result_variable_getRawValue_Wei_HBDhRZUVd4 := rawValue_Wei[struct_instance_getRawValue_Wei_uIO8LpV0Y1];
// #MARKER# -7580936090723529065
}

procedure {:inline 10} transfer$inoutWeiInt_Wei(struct_instance_transfer$inoutWeiInt_Wei_C0umRn9JBr: int, source_transfer$inoutWeiInt_Wei: int, amount_transfer$inoutWeiInt_Wei: int)
  // Pre Conditions
  
// #MARKER# 5490322114022883885
requires ((source_transfer$inoutWeiInt_Wei < nextInstance_Wei));
// #MARKER# 5490322114022883885
requires (((source_transfer$inoutWeiInt_Wei < nextInstance_Wei) && (source_transfer$inoutWeiInt_Wei >= 0)));
// #MARKER# -8403369363394799663
requires (((struct_instance_transfer$inoutWeiInt_Wei_C0umRn9JBr < nextInstance_Wei) && (struct_instance_transfer$inoutWeiInt_Wei_C0umRn9JBr >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies rawValue_Wei;
{
// Local variable declarations

var unused2_transfer$inoutWeiInt_Wei: int;
var unused1_transfer$inoutWeiInt_Wei: int;
var v_j93F2fksXl: int;
var v_JRMp7OmdOV: int;
var v_tBCYGbAnvz: int;
var v_cINEdmXVyZ: int;
var v_NpQedS3T5J: int;

// transfer$inoutWeiInt_Wei's implementation

// #MARKER# 4515448393470304486
call v_j93F2fksXl :=  getRawValue_Wei(source_transfer$inoutWeiInt_Wei);
// #MARKER# 7132818325528161182
if ((v_j93F2fksXl < amount_transfer$inoutWeiInt_Wei)) {
  
// #MARKER# 647597287431397854
assume (false);
  // #MARKER# 7132818325528161182
} else {
  
  // #MARKER# 7132818325528161182
}
// #MARKER# -8225207320574736812
call v_NpQedS3T5J :=  getRawValue_Wei(source_transfer$inoutWeiInt_Wei);
// #MARKER# 4293414368702161311
call v_cINEdmXVyZ :=  setRawValueInt_Wei(source_transfer$inoutWeiInt_Wei, (v_NpQedS3T5J - amount_transfer$inoutWeiInt_Wei));
// #MARKER# -2811575634900883089
unused1_transfer$inoutWeiInt_Wei := v_cINEdmXVyZ;
// #MARKER# -4433192843796644488
call v_JRMp7OmdOV :=  getRawValue_Wei(struct_instance_transfer$inoutWeiInt_Wei_C0umRn9JBr);
// #MARKER# -161438322171571139
call v_tBCYGbAnvz :=  setRawValueInt_Wei(struct_instance_transfer$inoutWeiInt_Wei_C0umRn9JBr, (v_JRMp7OmdOV + amount_transfer$inoutWeiInt_Wei));
// #MARKER# 4206508758365554697
unused2_transfer$inoutWeiInt_Wei := v_tBCYGbAnvz;
// #MARKER# -8403369363394799663
}

procedure {:inline 10} transfer$inoutWei_Wei(struct_instance_transfer$inoutWei_Wei_HbxAdcozvI: int, source_transfer$inoutWei_Wei: int)
  // Pre Conditions
  
// #MARKER# 5581469143218331212
requires ((source_transfer$inoutWei_Wei < nextInstance_Wei));
// #MARKER# 5581469143218331212
requires (((source_transfer$inoutWei_Wei < nextInstance_Wei) && (source_transfer$inoutWei_Wei >= 0)));
// #MARKER# 4108489190496384079
requires (((struct_instance_transfer$inoutWei_Wei_HbxAdcozvI < nextInstance_Wei) && (struct_instance_transfer$inoutWei_Wei_HbxAdcozvI >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies rawValue_Wei;
{
// Local variable declarations

var v_3OqFub22E2: int;

// transfer$inoutWei_Wei's implementation

// #MARKER# -4237508051675921442
call v_3OqFub22E2 :=  getRawValue_Wei(source_transfer$inoutWei_Wei);
// #MARKER# 1435716381284179400
call  transfer$inoutWeiInt_Wei(struct_instance_transfer$inoutWei_Wei_HbxAdcozvI, source_transfer$inoutWei_Wei, v_3OqFub22E2);
// #MARKER# 4108489190496384079
}

procedure {:inline 10} initInt_Wei(unsafeRawValue_initInt_Wei: int) returns ( result_variable_initInt_Wei_8Xu4WBrhny: int)
  // Pre Conditions
  
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -4913995110494046121
ensures ((nextInstance_Wei == (old(nextInstance_Wei) + 1)));
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies nextInstance_Wei;
modifies rawValue_Wei;
modifies totalValue_Wei;
{
// Local variable declarations

var struct_instance_initInt_Wei_DpHoUSHNY0: int;

// initInt_Wei's implementation

// #MARKER# -4913995110494046121
struct_instance_initInt_Wei_DpHoUSHNY0 := nextInstance_Wei;
// #MARKER# -4913995110494046121
nextInstance_Wei := (nextInstance_Wei + 1);
// #MARKER# 7907092033235033446
rawValue_Wei[struct_instance_initInt_Wei_DpHoUSHNY0] := 0;
// #MARKER# -5461174675676882347
if ((!(unsafeRawValue_initInt_Wei == 0))) {
  
// #MARKER# -3520202412915699565
assume (false);
  // #MARKER# -5461174675676882347
} else {
  
  // #MARKER# -5461174675676882347
}
// #MARKER# 8752413271643057463
rawValue_Wei[struct_instance_initInt_Wei_DpHoUSHNY0] := unsafeRawValue_initInt_Wei;
// #MARKER# -4913995110494046121
result_variable_initInt_Wei_8Xu4WBrhny := struct_instance_initInt_Wei_DpHoUSHNY0;
// #MARKER# -4913995110494046121
totalValue_Wei := (totalValue_Wei + unsafeRawValue_initInt_Wei);
// #MARKER# -4913995110494046121
}

procedure {:inline 10} init$inoutWeiInt_Wei(source_init$inoutWeiInt_Wei: int, amount_init$inoutWeiInt_Wei: int) returns ( result_variable_init$inoutWeiInt_Wei_mHMGmEvOAz: int)
  // Pre Conditions
  
// #MARKER# -4650472053158561902
requires ((source_init$inoutWeiInt_Wei < nextInstance_Wei));
// #MARKER# -4650472053158561902
requires (((source_init$inoutWeiInt_Wei < nextInstance_Wei) && (source_init$inoutWeiInt_Wei >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -1269467608507190850
ensures ((nextInstance_Wei == (old(nextInstance_Wei) + 1)));
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies nextInstance_Wei;
modifies rawValue_Wei;
{
// Local variable declarations

var struct_instance_init$inoutWeiInt_Wei_QqNVqCBDdN: int;

// init$inoutWeiInt_Wei's implementation

// #MARKER# -1269467608507190850
struct_instance_init$inoutWeiInt_Wei_QqNVqCBDdN := nextInstance_Wei;
// #MARKER# -1269467608507190850
nextInstance_Wei := (nextInstance_Wei + 1);
// #MARKER# 7907092033235033446
rawValue_Wei[struct_instance_init$inoutWeiInt_Wei_QqNVqCBDdN] := 0;
// #MARKER# 7126796498123194315
call  transfer$inoutWeiInt_Wei(struct_instance_init$inoutWeiInt_Wei_QqNVqCBDdN, source_init$inoutWeiInt_Wei, amount_init$inoutWeiInt_Wei);
// #MARKER# -1269467608507190850
result_variable_init$inoutWeiInt_Wei_mHMGmEvOAz := struct_instance_init$inoutWeiInt_Wei_QqNVqCBDdN;
// #MARKER# -1269467608507190850
}

procedure {:inline 10} init$inoutWei_Wei(source_init$inoutWei_Wei: int) returns ( result_variable_init$inoutWei_Wei_Aar18jcuDR: int)
  // Pre Conditions
  
// #MARKER# 3489314479106385335
requires ((source_init$inoutWei_Wei < nextInstance_Wei));
// #MARKER# 3489314479106385335
requires (((source_init$inoutWei_Wei < nextInstance_Wei) && (source_init$inoutWei_Wei >= 0)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -5523307075590141026
ensures ((nextInstance_Wei == (old(nextInstance_Wei) + 1)));
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies nextInstance_Wei;
modifies rawValue_Wei;
{
// Local variable declarations

var amount_init$inoutWei_Wei: int;
var v_qHw7W88bhX: int;
var struct_instance_init$inoutWei_Wei_MLkTdBl0rB: int;

// init$inoutWei_Wei's implementation

// #MARKER# -5523307075590141026
struct_instance_init$inoutWei_Wei_MLkTdBl0rB := nextInstance_Wei;
// #MARKER# -5523307075590141026
nextInstance_Wei := (nextInstance_Wei + 1);
// #MARKER# 7907092033235033446
rawValue_Wei[struct_instance_init$inoutWei_Wei_MLkTdBl0rB] := 0;
// #MARKER# 913966412688132158
call v_qHw7W88bhX :=  getRawValue_Wei(source_init$inoutWei_Wei);
// #MARKER# 8092438083118431025
amount_init$inoutWei_Wei := v_qHw7W88bhX;
// #MARKER# 8229895195315700769
call  transfer$inoutWeiInt_Wei(struct_instance_init$inoutWei_Wei_MLkTdBl0rB, source_init$inoutWei_Wei, amount_init$inoutWei_Wei);
// #MARKER# -5523307075590141026
result_variable_init$inoutWei_Wei_Aar18jcuDR := struct_instance_init$inoutWei_Wei_MLkTdBl0rB;
// #MARKER# -5523307075590141026
}

var caller_Prime: Address;

var stateVariable_Prime: int;

procedure {:inline 10} init_Prime()
  // Pre Conditions
  
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
  // Post Conditions
  
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
modifies stateVariable_Prime;
modifies receivedValue_Wei;
modifies sentValue_Wei;
modifies totalValue_Wei;
{
// Local variable declarations


// init_Prime's implementation

// #MARKER# -1142833656767055124
totalValue_Wei := 0;
// #MARKER# -1142833656767055124
sentValue_Wei := 0;
// #MARKER# -1142833656767055124
receivedValue_Wei := 0;
// #MARKER# -1142833656767055124
}

procedure {:inline 10} primeIntInt_Prime(a_primeIntInt_Prime: int, b_primeIntInt_Prime: int)
  // Pre Conditions
  
// #MARKER# 916053787754179092
requires (((1 < a_primeIntInt_Prime) && (a_primeIntInt_Prime < 500)));
// #MARKER# 35220382626211411
requires (((1 < b_primeIntInt_Prime) && (b_primeIntInt_Prime < 25000)));
// #MARKER# -4826443507261523574
requires ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
requires ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Post Conditions
  
// #MARKER# -4826443507261523574
ensures ((nextInstance_Wei >= 0));
// #MARKER# 8634117924825698155
ensures ((totalValue_Wei == (receivedValue_Wei - sentValue_Wei)));
  // Modifies
  
{
// Local variable declarations


// primeIntInt_Prime's implementation

// #MARKER# -6969644118469385423
assert ((!((a_primeIntInt_Prime * b_primeIntInt_Prime) == 23447)));
// #MARKER# 4113493360407591985
}

procedure factor(a: int, b: int)
  requires (1 < a && a < 500);
  requires (1 < b && b < 25000);
{
  assert (!(a * b) == 23449);
}
