contract C {
  var value: Int = 0
  var balance: Wei
}

C :: (any) {
  public init()
    mutates (Wei.rawValue)
  {
    self.balance = Wei(0)
  }

  public func setValue(p: Int)
    mutates (value)
  {
    self.value = 0
    assert (self.value == p)
  }

  @payable
  public func deposit(implicit amount: Wei)
    mutates (balance, Wei.rawValue)

    pre (amount.rawValue > 0)
    pre (amount.rawValue == 0)

    post (balance.rawValue > prev(balance.rawValue))
    post (balance.rawValue == prev(balance.rawValue)
          + prev(amount.rawValue))
  {
    self.balance.transfer(source: &amount)
  }
}
